%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.1.0.604 (R2013a). Operating System: Microsoft Windows 7.
%%Title: D:\GitHub\Eye-Tracking\Pororo\tex\Thesis\eps\individual_fixation_duration.eps
%%CreationDate: 08/27/2014  16:40:45
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    72   262   522   578
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    72   262   522   578
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0864 6936 csm

    0     0  5405  3782 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5406 3783 rf
6 w
0 3082 4189 0 0 -3082 703 3366 4 MP
PP
-4189 0 0 3082 4189 0 0 -3082 703 3366 5 MP stroke
4 w
DO
SO
6 w
0 sg
 703  284 mt 4892  284 L
 703 3366 mt 4892 3366 L
4892 3366 mt 4892  284 L
 703 3366 mt  703  284 L
 703 3366 mt 4892 3366 L
 703 3366 mt  703  284 L
 703 3366 mt  703 3324 L
 703  284 mt  703  325 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 670 3511 mt 
(0) s
1401 3366 mt 1401 3324 L
1401  284 mt 1401  325 L
1335 3511 mt 
(20) s
2099 3366 mt 2099 3324 L
2099  284 mt 2099  325 L
2033 3511 mt 
(40) s
2797 3366 mt 2797 3324 L
2797  284 mt 2797  325 L
2731 3511 mt 
(60) s
3495 3366 mt 3495 3324 L
3495  284 mt 3495  325 L
3429 3511 mt 
(80) s
4193 3366 mt 4193 3324 L
4193  284 mt 4193  325 L
4093 3511 mt 
(100) s
4892 3366 mt 4892 3324 L
4892  284 mt 4892  325 L
4792 3511 mt 
(120) s
 703 3366 mt  744 3366 L
4892 3366 mt 4850 3366 L
 602 3410 mt 
(0) s
 703 3023 mt  744 3023 L
4892 3023 mt 4850 3023 L
 602 3067 mt 
(1) s
 703 2681 mt  744 2681 L
4892 2681 mt 4850 2681 L
 602 2725 mt 
(2) s
 703 2338 mt  744 2338 L
4892 2338 mt 4850 2338 L
 602 2382 mt 
(3) s
 703 1996 mt  744 1996 L
4892 1996 mt 4850 1996 L
 602 2040 mt 
(4) s
 703 1653 mt  744 1653 L
4892 1653 mt 4850 1653 L
 602 1697 mt 
(5) s
 703 1311 mt  744 1311 L
4892 1311 mt 4850 1311 L
 602 1355 mt 
(6) s
 703  968 mt  744  968 L
4892  968 mt 4850  968 L
 602 1012 mt 
(7) s
 703  626 mt  744  626 L
4892  626 mt 4850  626 L
 602  670 mt 
(8) s
 703  284 mt  744  284 L
4892  284 mt 4850  284 L
 602  328 mt 
(9) s
 703  284 mt 4892  284 L
 703 3366 mt 4892 3366 L
4892 3366 mt 4892  284 L
 703 3366 mt  703  284 L
gs 703 284 4190 3083 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
35 139 35 98 35 -237 35 376 35 -614 35 0 35 238 35 237 
35 0 34 77 35 0 35 -175 35 98 35 0 35 77 35 62 
35 -376 35 237 35 -98 35 237 34 0 35 0 35 208 35 -208 
35 -376 35 584 35 -109 35 346 35 -306 35 -40 35 258 34 -304 
35 261 35 62 35 -201 35 314 35 -113 35 84 35 55 35 -70 
35 70 35 0 34 0 35 99 35 44 35 -156 35 71 35 132 
35 -55 35 103 35 78 35 25 35 44 34 4 35 35 35 44 
35 70 35 11 35 -16 35 87 35 66 35 76 35 34 35 48 
34 67 35 43 35 68 35 18 35 56 35 5 35 -13 35 144 
807 1005 73 MP stroke
35 -238 35 475 35 -475 35 667 35 -429 35 139 3390 2989 7 MP stroke
35 377 3670 2989 2 MP stroke
3774 3366 PD
35 0 35 238 3844 3128 3 MP stroke
35 0 3984 3366 2 MP stroke
4158 3128 PD
4228 3366 PD
35 0 35 0 4298 3366 3 MP stroke
/c9 { 0.000000 0.500000 0.000000 sr} bdef
c9
35 237 35 -376 35 0 35 237 35 347 35 -155 34 -192 35 238 
35 0 35 76 35 -122 35 46 35 215 35 -139 35 0 35 -36 
35 69 34 237 35 -50 35 -59 35 139 35 53 35 -26 35 71 
35 11 35 0 35 82 35 39 34 126 35 25 35 -5 35 80 
35 52 35 0 35 65 35 66 35 89 35 35 35 96 34 67 
35 27 35 93 35 73 35 44 35 62 35 82 35 256 807 714 48 MP stroke
35 238 35 139 34 -139 35 0 35 139 35 -139 35 -238 35 0 
35 238 35 139 35 -139 35 139 35 98 34 0 35 -98 35 0 
2518 2989 17 MP stroke
3146 3366 PD
35 238 35 -238 35 238 3251 3128 4 MP stroke
3425 2989 PD
34 0 35 238 35 -238 35 0 35 0 3600 3366 6 MP stroke
3844 3128 PD
35 -238 35 0 3914 3366 3 MP stroke
35 0 4054 3366 2 MP stroke
35 0 4228 3366 2 MP stroke
35 0 35 0 4403 3366 3 MP stroke
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
35 377 35 -377 35 377 35 0 35 237 34 -376 35 314 35 0 
35 115 35 -115 35 -175 35 237 35 -62 35 -77 35 77 35 201 
34 98 35 -98 35 -40 35 237 35 76 35 -98 35 98 35 116 
35 0 35 -83 35 159 34 71 35 96 35 -73 35 91 35 135 
35 50 35 -39 35 167 35 41 35 31 35 53 34 85 35 76 
35 123 35 57 35 59 35 133 35 91 35 346 807 555 47 MP stroke
35 0 2483 3366 2 MP stroke
/c11 { 0.000000 0.750000 0.750000 sr} bdef
c11
35 115 35 -290 35 175 35 -314 35 139 35 175 35 237 35 -122 
34 155 35 106 35 -261 35 212 35 195 35 -31 35 16 35 -33 
35 77 35 134 35 -72 34 63 35 119 35 127 35 -83 35 88 
35 35 35 64 35 110 35 46 35 33 35 147 34 33 35 79 
35 108 35 37 35 95 35 67 35 38 35 374 807 621 39 MP stroke
35 0 35 0 35 0 35 0 35 377 35 237 35 -614 2238 3366 8 MP stroke
35 -238 35 0 35 475 35 -475 34 0 2588 3366 6 MP stroke
2867 2891 PD
35 0 2937 3366 2 MP stroke
35 0 35 0 35 0 3041 3366 4 MP stroke
35 0 3251 3366 2 MP stroke
3460 3366 PD
35 0 3530 3366 2 MP stroke
3670 3366 PD
/c12 { 0.750000 0.000000 0.750000 sr} bdef
c12
35 0 35 377 35 175 35 -314 34 237 35 -237 35 0 35 475 
35 -475 35 314 35 -77 35 238 35 -46 35 46 35 -336 34 237 
35 237 35 -184 35 155 35 -33 35 -122 35 122 35 -122 35 184 
35 -138 35 109 34 149 35 -304 35 342 35 120 35 -225 35 67 
35 145 35 26 35 23 35 0 35 -11 34 44 35 39 35 -29 
35 96 35 -86 35 129 35 44 35 -72 35 -15 35 151 35 37 
34 -13 35 55 35 82 35 6 35 40 35 68 35 -9 35 82 
35 -4 35 87 35 45 34 87 35 62 35 68 35 42 35 31 
35 51 35 10 35 267 807 817 68 MP stroke
35 0 35 377 35 -377 35 377 3216 2989 5 MP stroke
35 377 3425 2989 2 MP stroke
35 0 35 0 35 238 35 -238 35 238 3530 3128 6 MP stroke
35 0 3774 3366 2 MP stroke
35 0 3949 3366 2 MP stroke
4054 3366 PD
4124 3366 PD
4228 2989 PD
4438 3128 PD
4787 3366 PD
4857 3366 PD
/c13 { 0.750000 0.750000 0.000000 sr} bdef
c13
35 40 35 36 35 -76 35 313 34 -147 35 71 35 40 35 113 
35 -29 35 134 35 -149 35 83 35 76 35 0 35 129 34 20 
35 -48 35 215 35 -55 35 122 35 45 35 -15 35 92 35 81 
35 4 35 131 34 58 35 84 35 37 35 67 35 107 35 45 
35 55 35 342 807 632 35 MP stroke
0.25 sg
34 314 35 0 35 -77 35 347 35 -155 35 86 35 -86 35 46 
35 191 35 86 35 -237 34 175 35 201 35 58 35 31 35 115 
35 40 35 24 35 95 35 86 35 115 35 35 34 85 35 120 
35 75 35 50 35 130 35 83 35 105 35 450 807 540 31 MP stroke
c8
35 314 35 -175 35 0 35 0 35 98 35 -98 35 376 35 -40 
35 -238 35 278 34 36 35 161 35 -283 35 184 35 -237 35 208 
35 237 35 0 35 -270 35 139 35 161 34 53 35 12 35 33 
35 11 35 20 35 0 35 101 35 35 35 54 35 0 35 97 
34 25 35 11 35 56 35 51 35 30 35 52 35 76 35 -20 
35 108 35 13 35 87 34 15 35 55 35 33 35 93 35 -34 
35 65 35 22 35 333 807 790 52 MP stroke
gr

c8
0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 132 FMSR

1982 3668 mt 
(Fixation Duration \(1/30 sec\)) s
 518 2913 mt  -90 rotate
(Logarithm of the Number of Fixations) s
90 rotate

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
