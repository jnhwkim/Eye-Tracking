function [participant_id,L1,L2,L3,L4,L5,L6,L7,L8] = import_types(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [PARTICIPANT_ID1,L1,L2,L3,L4,L5,L6,L7,L8] = IMPORTFILE(FILENAME) Reads
%   data from text file FILENAME for the default selection.
%
%   [PARTICIPANT_ID1,L1,L2,L3,L4,L5,L6,L7,L8] = IMPORTFILE(FILENAME,
%   STARTROW, ENDROW) Reads data from rows STARTROW through ENDROW of text
%   file FILENAME.
%
% Example:
%   [participant_id1,L1,L2,L3,L4,L5,L6,L7,L8] = importfile('types.csv',2,
%   12);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2014/08/07 16:46:57

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: text (%s)
%	column2: text (%s)
%   column3: text (%s)
%	column4: text (%s)
%   column5: text (%s)
%	column6: text (%s)
%   column7: text (%s)
%	column8: text (%s)
%   column9: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%s%s%s%s%s%s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
warning off MATLAB:iofun:UnsupportedEncoding;
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
participant_id = dataArray{:, 1};
L1 = dataArray{:, 2};
L2 = dataArray{:, 3};
L3 = dataArray{:, 4};
L4 = dataArray{:, 5};
L5 = dataArray{:, 6};
L6 = dataArray{:, 7};
L7 = dataArray{:, 8};
L8 = dataArray{:, 9};

