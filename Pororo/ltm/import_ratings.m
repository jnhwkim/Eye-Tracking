function [participant_id,regtime,L_1,L_2,L_3,L_4,L_5,L_6,L_7,L_8,S_1,S_2,S_3,S_4,S_5,S_6,S_7,S_8,C_1,C_2,C_3,C_4] = import_ratings(filename, startRow, endRow)
%IMPORTFILE1 Import numeric data from a text file as column vectors.
%   [PARTICIPANT_ID,REGTIME,L_1,L_2,L_3,L_4,L_5,L_6,L_7,L_8,S_1,S_2,S_3,S_4,S_5,S_6,S_7,S_8,C_1,C_2,C_3,C_4]
%   = IMPORTFILE1(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [PARTICIPANT_ID,REGTIME,L_1,L_2,L_3,L_4,L_5,L_6,L_7,L_8,S_1,S_2,S_3,S_4,S_5,S_6,S_7,S_8,C_1,C_2,C_3,C_4]
%   = IMPORTFILE1(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [participant_id,regtime,L_1,L_2,L_3,L_4,L_5,L_6,L_7,L_8,S_1,S_2,S_3,S_4,S_5,S_6,S_7,S_8,C_1,C_2,C_3,C_4]
%   = importfile1('pororo3.csv',2, 13);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2014/08/07 13:38:07

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: text (%s)
%	column2: date strings (%s)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
warning off MATLAB:iofun:UnsupportedEncoding;
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Convert the contents of column with dates to serial date numbers using date format string (datenum).
dataArray{2} = datenum(dataArray{2}, 'yyyy-mm-dd HH:MM:SS');

%% Allocate imported array to column variable names
participant_id = dataArray{:, 1};
regtime = dataArray{:, 2};
L_1 = dataArray{:, 3};
L_2 = dataArray{:, 4};
L_3 = dataArray{:, 5};
L_4 = dataArray{:, 6};
L_5 = dataArray{:, 7};
L_6 = dataArray{:, 8};
L_7 = dataArray{:, 9};
L_8 = dataArray{:, 10};
S_1 = dataArray{:, 11};
S_2 = dataArray{:, 12};
S_3 = dataArray{:, 13};
S_4 = dataArray{:, 14};
S_5 = dataArray{:, 15};
S_6 = dataArray{:, 16};
S_7 = dataArray{:, 17};
S_8 = dataArray{:, 18};
C_1 = dataArray{:, 19};
C_2 = dataArray{:, 20};
C_3 = dataArray{:, 21};
C_4 = dataArray{:, 22};

