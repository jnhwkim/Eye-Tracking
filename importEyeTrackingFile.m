function [ET, IRMarkerIDs] = importEyeTrackingFile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%
% Example:
%   [ET, IRMarkerIDs] = importEyeTrackingFile('Maisy/maisy1_eye_tracking_jhkim.tsv', 2, 11044);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2014/02/04 17:40:23

%% Initialize variables.
delimiter = '\t';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
fprintf('Loading eye tracking data...\n');
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
fprintf('done.\n');

for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
Time = dataArray{:, 1};
X = dataArray{:, 2};
Y = dataArray{:, 3};
IRMarkerID = dataArray{:, 4};


%% Make an array for IR Marker IDs
MAX_NUM_OF_IR_MARKERS = 30;
N = size(IRMarkerID, 1);
IRMarkerIDs = zeros(N, MAX_NUM_OF_IR_MARKERS);

for i = 1:N
    [cellArray, matches] = strsplit(cell2mat(IRMarkerID(i)), ', ');
    if size(matches) > 0
        numArray = cellfun(@str2num, cellArray);
    else
        numArray = [];
    end
    row = [numArray zeros(1, MAX_NUM_OF_IR_MARKERS - size(numArray, 2))];
    IRMarkerIDs(i,:) = row;
end

%% Make a package
ET = [X Y];
